[{"title":"动态规划","url":"/coco/2022/06/28/alg-dp/","content":"<p>动态规划总结</p>\n<span id=\"more\"></span>\n<h2 id=\"最长递增子序列\"><a href=\"#最长递增子序列\" class=\"headerlink\" title=\"最长递增子序列\"></a>最长递增子序列</h2><p>递增子序列可不连续<br>dp[i]中存储以第i个元素结尾的最大递增子序列的长度，<br>dp[i] &#x3D; dp(0, i)中可以和nums[i]组成最大递增子序列的 dp[k] + 1    ( k &lt; i )</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLIS = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"title class_\">Array</span>(nums.<span class=\"property\">length</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(nums.<span class=\"property\">length</span> &gt;= <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[j] &lt; nums[i])&#123;</span><br><span class=\"line\">                dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i], dp[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...dp);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组赋默认值方式</span></span><br><span class=\"line\"><span class=\"comment\">// Array()返回的是稀疏数组，无法遍历， Array.apply 相当于执行 Array(null,null......))，</span></span><br><span class=\"line\"><span class=\"comment\">// 最终返回每一项是undefined的数组  通过map遍历赋值</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, <span class=\"title class_\">Array</span>(nums.<span class=\"property\">length</span>)).<span class=\"title function_\">map</span>(<span class=\"function\">()=&gt;</span><span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 求数组最大值方式 es5</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"property\">max</span>.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, dp);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"最大连续子数组和\"><a href=\"#最大连续子数组和\" class=\"headerlink\" title=\"最大连续子数组和\"></a>最大连续子数组和</h2><p>dp[i]中存以第i个元素结尾的最大子数组和<br>dp[i] &#x3D; Math.max(nums[i], nums[i] + dp[i - 1])</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"title class_\">Array</span>(nums.<span class=\"property\">length</span>).<span class=\"title function_\">fill</span>(<span class=\"literal\">null</span>).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item, i</span>) =&gt;</span> nums[i]);</span><br><span class=\"line\">    nums.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item, i</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            dp[i] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(item, item + dp[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          dp[i] = item;   </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(...dp);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化版</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pre = -<span class=\"title class_\">Infinity</span>, max = -<span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = nums.<span class=\"property\">length</span>; i &lt; j; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> item = nums[i];</span><br><span class=\"line\">        pre = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(item, item + pre);</span><br><span class=\"line\">        max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, pre);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"凑零钱\"><a href=\"#凑零钱\" class=\"headerlink\" title=\"凑零钱\"></a>凑零钱</h2><p><a href=\"https://leetcode.cn/problems/coin-change/\">力扣 322</a></p>\n<h3 id=\"自顶向下\"><a href=\"#自顶向下\" class=\"headerlink\" title=\"自顶向下\"></a>自顶向下</h3><p>递归，用备忘录优化，剪枝</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 状态转移方程 dp(amount) = dp(amount - coin) + 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> coinChange = <span class=\"keyword\">function</span>(<span class=\"params\">coins, amount</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> memory = [];</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">dp</span>(<span class=\"params\">amount</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(amount &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(amount === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> min = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, k = coins.<span class=\"property\">length</span>; i &lt; k; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> coin = coins[i];</span><br><span class=\"line\">            <span class=\"keyword\">let</span> key = amount - coin;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> cur = memory[key] || <span class=\"title function_\">dp</span>(amount - coin);</span><br><span class=\"line\">            memory[key] = cur;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cur === -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cur &gt;= <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                min = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(min, cur + <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(min != <span class=\"title class_\">Infinity</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> min;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">dp</span>(amount);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自底向上\"><a href=\"#自底向上\" class=\"headerlink\" title=\"自底向上\"></a>自底向上</h3><p>计算从1到amount每一个需要的最小张数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 状态转移方程 dp(amount) = dp(amount - coin) + 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> coinChange = <span class=\"keyword\">function</span>(<span class=\"params\">coins, amount</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = <span class=\"title class_\">Array</span>(amount + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>; i &lt; amount + <span class=\"number\">1</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> min = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>, j = coins.<span class=\"property\">length</span>; k &lt; j; k++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> item = coins[k];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i - item &lt; <span class=\"number\">0</span> || dp[i - item] === -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            min = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(min, dp[i - item] + <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dp[i] = min === <span class=\"title class_\">Infinity</span> ? -<span class=\"number\">1</span> : min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[amount];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","categories":["算法"],"tags":["动态规划"]},{"title":"贪心算法","url":"/coco/2022/07/13/alg-greedy/","content":"<p>贪心算法系列</p>\n<span id=\"more\"></span>\n\n<h2 id=\"环形加油站\"><a href=\"#环形加油站\" class=\"headerlink\" title=\"环形加油站\"></a>环形加油站</h2><p><a href=\"https://leetcode.cn/problems/gas-station/\">力扣 134</a></p>\n<p>如果从i刚好走不到j，那么从i-j的任一个位置都走不到j 此时以j+1为起点寻找终点</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canCompleteCircuit = <span class=\"keyword\">function</span>(<span class=\"params\">gas, cost</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> le = gas.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; le; i++)&#123;</span><br><span class=\"line\">        sum += gas[i] - cost[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sum &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">    sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; le; k++)&#123;</span><br><span class=\"line\">        sum += gas[k] - cost[k];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sum &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            start = k + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> start;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"二叉树","url":"/coco/2022/06/28/alg-tree/","content":"<p>二叉树相关算法</p>\n<span id=\"more\"></span>\n\n<h1 id=\"层序遍历\"><a href=\"#层序遍历\" class=\"headerlink\" title=\"层序遍历\"></a>层序遍历</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> levelOrder = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!root)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> layer = [root], res = [], len = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(layer.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> temp = [];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!len)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> item = layer.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\">            item &amp;&amp; temp.<span class=\"title function_\">push</span>(item.<span class=\"property\">val</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(item.<span class=\"property\">left</span>)&#123;</span><br><span class=\"line\">                layer.<span class=\"title function_\">push</span>(item.<span class=\"property\">left</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(item.<span class=\"property\">right</span>)&#123;</span><br><span class=\"line\">                layer.<span class=\"title function_\">push</span>(item.<span class=\"property\">right</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        len = layer.<span class=\"property\">length</span>;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"深度遍历–前序\"><a href=\"#深度遍历–前序\" class=\"headerlink\" title=\"深度遍历–前序\"></a>深度遍历–前序</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> preorderTraversal = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!root)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> stack = [root];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(stack.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> item = stack.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(item.<span class=\"property\">val</span>);</span><br><span class=\"line\">        item.<span class=\"property\">right</span> &amp;&amp; (stack.<span class=\"title function_\">push</span>(item.<span class=\"property\">right</span>));</span><br><span class=\"line\">        item.<span class=\"property\">left</span> &amp;&amp; (stack.<span class=\"title function_\">push</span>(item.<span class=\"property\">left</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"验证二叉搜索树-BST\"><a href=\"#验证二叉搜索树-BST\" class=\"headerlink\" title=\"验证二叉搜索树(BST)\"></a>验证二叉搜索树(BST)</h1><p><a href=\"https://leetcode.cn/problems/validate-binary-search-tree/\">力扣 98</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isValidBST = <span class=\"keyword\">function</span>(<span class=\"params\">root, min = <span class=\"literal\">null</span>, max = <span class=\"literal\">null</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!root)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(min != <span class=\"literal\">null</span> &amp;&amp; root.<span class=\"property\">val</span> &lt;= min.<span class=\"property\">val</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(max != <span class=\"literal\">null</span> &amp;&amp; root.<span class=\"property\">val</span> &gt;= max.<span class=\"property\">val</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">isValidBST</span>(root.<span class=\"property\">left</span>, min, root) &amp;&amp; <span class=\"title function_\">isValidBST</span>(root.<span class=\"property\">right</span>, root, max)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","categories":["算法"],"tags":["二叉树"]},{"title":"基础算法","url":"/coco/2022/06/28/algorithm/","content":"<p>算法总结</p>\n<span id=\"more\"></span>\n<h2 id=\"基础算法\"><a href=\"#基础算法\" class=\"headerlink\" title=\"基础算法\"></a>基础算法</h2><h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// swap</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">swap</span>(<span class=\"params\">array, index1, index2</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = array[index1];</span><br><span class=\"line\">    array[index1] = array[index2];</span><br><span class=\"line\">    array[index2] = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">bubbleSort</span>(<span class=\"params\">array</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>, len = array.<span class=\"property\">length</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k = i; k &gt; <span class=\"number\">0</span>; k--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[k] &lt; array[k - <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                <span class=\"title function_\">swap</span>(array, k - <span class=\"number\">1</span> , k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><p>选择排序 在未排序的里面找出最小的，放在首位(已排好序的末尾)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">selectSort</span>(<span class=\"params\">array</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>, len = array.<span class=\"property\">length</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> min = array[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k = i; k &lt; len; k++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[k] &lt; min)&#123;</span><br><span class=\"line\">                min = array[k];</span><br><span class=\"line\">                <span class=\"title function_\">swap</span>(array, k, i - <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><p>插入排序 将一个记录插入到已经排好序的有序表中</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">insertSort</span>(<span class=\"params\">array</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>, len = array.<span class=\"property\">length</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k = i; k &gt; <span class=\"number\">0</span>; k--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[k] &lt; array[k - <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                <span class=\"title function_\">swap</span>(array, k, k - <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二分查找\"><a href=\"#二分查找\" class=\"headerlink\" title=\"二分查找\"></a>二分查找</h3><p>二分查找 (折半查找)  start 在一个有序数组中 先找中间的 然后找符合条件的左侧或者右侧 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 递归</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">binarySearch</span>(<span class=\"params\">array, val, start, end</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((end + start) / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">// if(start === end)&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     if(array[mid] === val)&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//         return mid;</span></span><br><span class=\"line\">    <span class=\"comment\">//     &#125;else&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//         return -1;</span></span><br><span class=\"line\">    <span class=\"comment\">//     &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(array[mid] &gt; val)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">binarySearch</span>(array, val, start, mid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(array[mid] &lt; val)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">binarySearch</span>(array, val, mid + <span class=\"number\">1</span>, end);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(array[mid] === val)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 非递归</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">binarySearch</span>(<span class=\"params\">array, val</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> end = array.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(start !== end)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((start + end)/ <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(array[mid] &gt; val)&#123;</span><br><span class=\"line\">            end = mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(array[mid] &lt; val)&#123;</span><br><span class=\"line\">            start = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(array[mid] === val)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"高级排序算法\"><a href=\"#高级排序算法\" class=\"headerlink\" title=\"高级排序算法\"></a>高级排序算法</h2><h3 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h3><p>随意选一基准，左侧放比之小的，右侧放比之大的  递归直到length为1</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">quickSort</span>(<span class=\"params\">array</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(array.<span class=\"property\">length</span> &lt;= <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> left = [], right = [], baseVal = array[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; array.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> val = array[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(val &lt; baseVal)&#123;</span><br><span class=\"line\">            left.<span class=\"title function_\">push</span>(val)</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            right.<span class=\"title function_\">push</span>(val)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [...<span class=\"title function_\">quickSort</span>(left), baseVal,...<span class=\"title function_\">quickSort</span>(right)];</span><br><span class=\"line\">    <span class=\"comment\">// 或</span></span><br><span class=\"line\">    <span class=\"comment\">// return quickSort(left).concat(baseVal, quickSort(right))</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">mergeSort</span>(<span class=\"params\">array, start, end</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = [...array];</span><br><span class=\"line\">    <span class=\"title function_\">splitArray</span>(temp, <span class=\"number\">0</span>, array.<span class=\"property\">length</span> - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">splitArray</span>(<span class=\"params\">array, start, end</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(start === end)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((start + end) / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"title function_\">splitArray</span>(array, start, mid);</span><br><span class=\"line\">    <span class=\"title function_\">splitArray</span>(array, mid + <span class=\"number\">1</span>, end);</span><br><span class=\"line\">    <span class=\"title function_\">mergeArray</span>(array, start, end, mid);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">mergeArray</span>(<span class=\"params\">array, start, end, mid</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = [], leftPoint = start, rightPoint = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(temp.<span class=\"property\">length</span> &lt; (end - start + <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> onlyLeft = leftPoint &lt;= mid &amp;&amp; rightPoint &gt; end ? <span class=\"string\">&quot;onlyLeft&quot;</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> onlyRight = leftPoint &gt; mid &amp;&amp; rightPoint &lt;= end ? <span class=\"string\">&quot;onlyRight&quot;</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> both = leftPoint &lt;= mid &amp;&amp; rightPoint &lt;= end ? <span class=\"string\">&quot;both&quot;</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> status = onlyLeft || onlyRight || both;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (status) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;onlyLeft&quot;</span>:</span><br><span class=\"line\">                temp.<span class=\"title function_\">push</span>(array[leftPoint++]);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;onlyRight&quot;</span>:</span><br><span class=\"line\">                temp.<span class=\"title function_\">push</span>(array[rightPoint++]);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;both&quot;</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(array[leftPoint] &gt; array[rightPoint])&#123;</span><br><span class=\"line\">                    temp.<span class=\"title function_\">push</span>(array[rightPoint++]);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    temp.<span class=\"title function_\">push</span>(array[leftPoint++]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"attr\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; temp.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">        array[start++] = temp[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"堆排序\"><a href=\"#堆排序\" class=\"headerlink\" title=\"堆排序\"></a>堆排序</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">10</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> len = array.<span class=\"property\">length</span>; <span class=\"comment\">// 全局变量</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">buildMaxHeap</span>(<span class=\"params\">array</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(len / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">heapify</span>(array, i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">swap</span>(<span class=\"params\">array, i, j</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp = array[i];</span><br><span class=\"line\">    array[i] = array[j];</span><br><span class=\"line\">    array[j] = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 堆调整</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">heapify</span>(<span class=\"params\">array, i</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> k = <span class=\"number\">2</span> * i + <span class=\"number\">1</span>, j = <span class=\"number\">2</span> * i + <span class=\"number\">2</span>, max = i;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(k &lt; len &amp;&amp; array[max] &lt; array[k])&#123;</span><br><span class=\"line\">        max = k;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(j &lt; len &amp;&amp; array[max] &lt; array[j])&#123;</span><br><span class=\"line\">        max = j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(max != i)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">swap</span>(array, i, max);</span><br><span class=\"line\">        <span class=\"title function_\">heapify</span>(array, max);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 堆排序</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">heapSort</span>(<span class=\"params\">array</span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">buildMaxHeap</span>(array);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = array.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt; <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">swap</span>(array, <span class=\"number\">0</span>, i);</span><br><span class=\"line\">        len--;</span><br><span class=\"line\">        <span class=\"title function_\">heapify</span>(array, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"希尔排序\"><a href=\"#希尔排序\" class=\"headerlink\" title=\"希尔排序\"></a>希尔排序</h3><p>插入排序的优化 将数据分组 保证 前面组的所有数据比后面组的小  直到gap为1 进行最后一次插入排序</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">shellSort</span>(<span class=\"params\">array</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> gap = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 动态设置gap</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(gap &lt; array.<span class=\"property\">length</span> / <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        gap = gap * <span class=\"number\">3</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(gap; gap &gt; <span class=\"number\">0</span>; gap = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(gap / <span class=\"number\">2</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = gap; i &lt; array.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> temp = array[i];</span><br><span class=\"line\">            <span class=\"keyword\">let</span> j;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(j = i - gap; j &gt;= <span class=\"number\">0</span> &amp;&amp; temp &lt; array[j]; j-=gap)&#123;</span><br><span class=\"line\">                array[j + gap] = array[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            array[j + gap] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["算法"]},{"title":"ES常用语法","url":"/coco/2022/06/29/code-es/","content":"<p>ES常用语法</p>\n<span id=\"more\"></span>\n\n<p><a href=\"https://gist.github.com/rajaramtt/7df3702a04c644b0b62c9a64f48f3dbf#5--ecmascript-2019---es2019---es10\">es新增特性</a>　　<a href=\"https://github.com/tc39/proposals/blob/main/finished-proposals.md\">tc39-finished-proposals</a>　　<a href=\"https://tc39.es/\">tc39.es</a></p>\n<h2 id=\"ES6\"><a href=\"#ES6\" class=\"headerlink\" title=\"ES6\"></a>ES6</h2><h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","categories":["ES"],"tags":["ES"]},{"title":"js继承","url":"/coco/2022/06/29/code-prototype/","content":"<p>js实现继承的方式</p>\n<span id=\"more\"></span>\n\n<h2 id=\"原型链继承\"><a href=\"#原型链继承\" class=\"headerlink\" title=\"原型链继承\"></a>原型链继承</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">superType</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span> = <span class=\"string\">&quot;super&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">colors</span> = [<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&quot;yellow&quot;</span>, <span class=\"string\">&quot;pink&quot;</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 1 存在引用类型值共享的问题</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">superType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getSuperName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">subType</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">subProp</span> = <span class=\"string\">&quot;sub&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> superType();</span><br><span class=\"line\"><span class=\"comment\">// 2 subType实例无法像superType传参</span></span><br><span class=\"line\"></span><br><span class=\"line\">subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = subType;</span><br><span class=\"line\">subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getsubName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">subProp</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> instance1 = <span class=\"keyword\">new</span> <span class=\"title function_\">subType</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> instance2 = <span class=\"keyword\">new</span> <span class=\"title function_\">subType</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">instance1.<span class=\"property\">colors</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;green&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance2.<span class=\"property\">colors</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"借用构造函数\"><a href=\"#借用构造函数\" class=\"headerlink\" title=\"借用构造函数\"></a>借用构造函数</h2><p>解决了引用类型值共享问题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">superType</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span> = <span class=\"string\">&quot;super&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">colors</span> = [<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&quot;yellow&quot;</span>, <span class=\"string\">&quot;pink&quot;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">superType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getSuperName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">subType</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">subProp</span> = <span class=\"string\">&quot;sub&quot;</span>;</span><br><span class=\"line\">    superType.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, ...<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 借用构造函数只能访问属性，解决了引用类型值共享问题, 不能复用原型函数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getsubName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">subProp</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> instance1 = <span class=\"keyword\">new</span> <span class=\"title function_\">subType</span>(<span class=\"string\">&#x27;instance1&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> instance2 = <span class=\"keyword\">new</span> <span class=\"title function_\">subType</span>(<span class=\"string\">&#x27;instance2&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance1.<span class=\"property\">name</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"组合继承-经典继承\"><a href=\"#组合继承-经典继承\" class=\"headerlink\" title=\"组合继承 (经典继承)\"></a>组合继承 (经典继承)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">superType</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span> = <span class=\"string\">&quot;super&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">colors</span> = [<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&quot;yellow&quot;</span>, <span class=\"string\">&quot;pink&quot;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">superType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getSuperName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">subType</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">subProp</span> = <span class=\"string\">&quot;sub&quot;</span>;</span><br><span class=\"line\">    superType.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, ...<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 借用构造函数只能访问属性，解决了引用类型值共享问题, 不能复用原型函数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> superType();</span><br><span class=\"line\"><span class=\"comment\">// subType.prototype上会有父构造函数实例的所有属性 资源浪费</span></span><br><span class=\"line\">subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = subType;</span><br><span class=\"line\">subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getsubName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">subProp</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> instance1 = <span class=\"keyword\">new</span> <span class=\"title function_\">subType</span>(<span class=\"string\">&#x27;instance1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance1.<span class=\"property\">colors</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">colors</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance1.<span class=\"property\">colors</span> === subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">colors</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"原型式继承\"><a href=\"#原型式继承\" class=\"headerlink\" title=\"原型式继承\"></a>原型式继承</h2><p>object函数， 类似ES5的 Object.create(, )</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">object</span>(<span class=\"params\">prototype</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">F</span>(<span class=\"params\"></span>)&#123;&#125;;</span><br><span class=\"line\">    F.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = prototype;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> f = <span class=\"keyword\">new</span> <span class=\"title function_\">F</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f;</span><br><span class=\"line\">    <span class=\"comment\">// object 返回一个指向原型的对象f</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;person&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">colors</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;yellow&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> instance1 = <span class=\"title function_\">object</span>(person);</span><br><span class=\"line\"><span class=\"keyword\">const</span> instance2 = <span class=\"title function_\">object</span>(person);</span><br><span class=\"line\">instance1.<span class=\"property\">name</span> = <span class=\"string\">&#x27;instance1&#x27;</span></span><br><span class=\"line\">instance1.<span class=\"property\">colors</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;pink&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance2.<span class=\"property\">colors</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// [ &#x27;red&#x27;, &#x27;yellow&#x27;, &#x27;green&#x27;, &#x27;pink&#x27; ]</span></span><br><span class=\"line\"><span class=\"comment\">// 存在引用类型值共享问题</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"寄生式继承\"><a href=\"#寄生式继承\" class=\"headerlink\" title=\"寄生式继承\"></a>寄生式继承</h2><p>creatAnother 子类增强的函数不能复用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">object</span>(<span class=\"params\">prototype</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">F</span>(<span class=\"params\"></span>)&#123;&#125;;</span><br><span class=\"line\">    F.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = prototype;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> f = <span class=\"keyword\">new</span> <span class=\"title function_\">F</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">creatAnother</span>(<span class=\"params\">surperType</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> property = <span class=\"title function_\">object</span>(surperType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\">    <span class=\"comment\">// 对象指向继承的原型</span></span><br><span class=\"line\">    property.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;hi&#x27;</span>) </span><br><span class=\"line\">    &#125;  <span class=\"comment\">//增强对象  但是sayHi不是复用，而是每个subType复制一份</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> property;  <span class=\"comment\">//返回对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> superType = &#123;</span><br><span class=\"line\">    <span class=\"attr\">superProp</span>: <span class=\"string\">&quot;super&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">getSuperName</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">subType = <span class=\"title function_\">creatAnother</span>(superType)</span><br><span class=\"line\">subType.<span class=\"title function_\">getSuperName</span>();</span><br><span class=\"line\">subType.<span class=\"title function_\">sayHi</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"寄生组合式继承\"><a href=\"#寄生组合式继承\" class=\"headerlink\" title=\"寄生组合式继承\"></a>寄生组合式继承</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">object</span>(<span class=\"params\">prototype</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">F</span>(<span class=\"params\"></span>)&#123;&#125;;</span><br><span class=\"line\">    F.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = prototype;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> f = <span class=\"keyword\">new</span> <span class=\"title function_\">F</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">superType</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span> = <span class=\"string\">&quot;super&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">colors</span> = [<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&quot;yellow&quot;</span>, <span class=\"string\">&quot;pink&quot;</span>];</span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">superType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getSuperName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">superProp</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">subType</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    superType.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, ...<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 1 解决引用类型值共享的问题</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">subProp</span> = <span class=\"string\">&quot;sub&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">inheritPrototype</span>(<span class=\"params\">superClass, subClass</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 2 解决了原型上有实例属性</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> prototype = <span class=\"title function_\">object</span>(superClass.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\">    subClass.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = prototype;</span><br><span class=\"line\">    subClass.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = subClass;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">inheritPrototype</span>(superType, subType);</span><br><span class=\"line\"><span class=\"keyword\">const</span> instance1 = <span class=\"keyword\">new</span> <span class=\"title function_\">subType</span>(<span class=\"string\">&#x27;instance1&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance1.<span class=\"property\">__proto__</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance1.<span class=\"property\">superProp</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance1.<span class=\"property\">colors</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(instance1.<span class=\"title function_\">getSuperName</span>())</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"ES6类继承\"><a href=\"#ES6类继承\" class=\"headerlink\" title=\"ES6类继承\"></a>ES6类继承</h2><ul>\n<li>super  子类constructor方法中必有，出现在this前, 用于获取实例属性和方法，可传参</li>\n<li>constructor 实例属性 实例方法</li>\n<li>static 无静态属性 只有静态方法(类没有静态属性，可以通过prototype扩展原型上的属性和方法)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">superType</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 实例属性</span></span><br><span class=\"line\">    a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">prop</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 实例属性</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">prop</span> = prop;</span><br><span class=\"line\">        <span class=\"comment\">// 实例方法</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">getProp</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">prop</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 原型方法  只能通过类的实例或者类的prototype访问</span></span><br><span class=\"line\">    <span class=\"title function_\">sum</span>(<span class=\"params\">a, b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 静态方法，只有通过类可以访问</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"title function_\">add</span>(<span class=\"params\">a, b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 扩展原型共享属性或方法  1</span></span><br><span class=\"line\">superType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">b</span> = <span class=\"number\">3</span>;</span><br><span class=\"line\">superType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getb</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">b</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 扩展原型共享属性或方法  2</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(superType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">b</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">        <span class=\"attr\">getb</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">b</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">childType</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">superType</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">prop</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">super</span>(prop);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">a</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">prop</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">getProp</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> child1 = <span class=\"keyword\">new</span> <span class=\"title function_\">childType</span>(<span class=\"string\">&#x27;child1&#x27;</span>)</span><br></pre></td></tr></table></figure>\n","categories":["前端知识"],"tags":["原型链","继承"]},{"title":"js常用函数 | 原理","url":"/coco/2022/06/28/code-tip/","content":"<p>常见函数及原理</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Object-create\"><a href=\"#Object-create\" class=\"headerlink\" title=\"Object.create\"></a>Object.create</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\">mycreate</span> = <span class=\"keyword\">function</span>(<span class=\"params\">proto, properties</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">F</span>(<span class=\"params\"></span>) &#123;&#125;;</span><br><span class=\"line\">    F.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = proto;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> f = <span class=\"keyword\">new</span> <span class=\"title function_\">F</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(properties) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperties</span>(f, properties);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ** Test **</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"title class_\">Object</span>.<span class=\"title function_\">mycreate</span>(&#123;<span class=\"attr\">a</span>: <span class=\"number\">11</span>&#125;, &#123;<span class=\"attr\">mm</span>: &#123;<span class=\"attr\">value</span>: <span class=\"number\">10</span>&#125;&#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">dir</span>(obj);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><ol>\n<li>创建一个空的简单JavaScript对象（即{}）；</li>\n<li>链接该新创建的对象（即设置该对象的__proto__）到该函数的原型对象prototype上 ；</li>\n<li>将步骤1新创建的对象作为 this 的上下文 ；</li>\n<li>如果该函数没有返回对象类型 Object(包含Functoin, Array, Date, RegExg, Error)，则返回新创建的对象。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_new</span>(<span class=\"params\">func</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> func !== <span class=\"string\">&#x27;function&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"string\">&#x27;_new function the first param must be a function&#x27;</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1 2</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(func.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\">    <span class=\"comment\">// 一个函数对象.__proto__ --&gt; func.prototype  obj.__proto__ === func.prototype</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> args = [].<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">arguments</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = func.<span class=\"title function_\">apply</span>(obj, args);</span><br><span class=\"line\">    <span class=\"comment\">// 4</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> resultType = <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(result);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"string\">&#x27;[object Function]&#x27;</span>, <span class=\"string\">&#x27;[object Object]&#x27;</span>].<span class=\"title function_\">includes</span>(resultType) ? result : obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ** Test **</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span>.<span class=\"property\">target</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = <span class=\"string\">&quot;red&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> person1 = <span class=\"title function_\">_new</span>(<span class=\"title class_\">Person</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(person1.<span class=\"property\">color</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(person1.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>)</span><br><span class=\"line\">person1.<span class=\"property\">color</span> = <span class=\"string\">&quot;green&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(person1.<span class=\"property\">color</span>, <span class=\"title class_\">Person</span>.<span class=\"property\">color</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apply\"><a href=\"#apply\" class=\"headerlink\" title=\"apply\"></a>apply</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myapply</span> = <span class=\"keyword\">function</span>(<span class=\"params\">context</span>)&#123;</span><br><span class=\"line\">    context = context ? <span class=\"title class_\">Object</span>(context) : <span class=\"variable language_\">window</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> args = [...<span class=\"variable language_\">arguments</span>][<span class=\"number\">1</span>];   <span class=\"comment\">// ***</span></span><br><span class=\"line\">    context.<span class=\"property\">fn</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!args) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> context.<span class=\"title function_\">fn</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> r = context.<span class=\"title function_\">fn</span>(...args);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> context.<span class=\"property\">fn</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> r;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"call\"></a>call</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">mycall</span> = <span class=\"keyword\">function</span>(<span class=\"params\">context</span>)&#123;</span><br><span class=\"line\">    context = context ? <span class=\"title class_\">Object</span>(context) : <span class=\"variable language_\">window</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> args = [].<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">arguments</span>, <span class=\"number\">1</span>);  <span class=\"comment\">// ***</span></span><br><span class=\"line\">    context.<span class=\"property\">fn</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> r = context.<span class=\"title function_\">fn</span>(...args);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> context.<span class=\"property\">fn</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> r;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"bind\"><a href=\"#bind\" class=\"headerlink\" title=\"bind\"></a>bind</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">mybind</span> = <span class=\"keyword\">function</span>(<span class=\"params\">context</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fn = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> args = [].<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">arguments</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> addArgs = [].<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">        fn.<span class=\"title function_\">apply</span>(context, args.<span class=\"title function_\">concat</span>(addArgs))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ** Test **</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fnBind = fn.<span class=\"title function_\">mybind</span>(_this, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">fnBind.<span class=\"title function_\">apply</span>(context)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"偏函数-带占位符\"><a href=\"#偏函数-带占位符\" class=\"headerlink\" title=\"偏函数(带占位符)\"></a>偏函数(带占位符)</h2><p>参考: <a href=\"https://juejin.cn/post/6844903928736251918\">https://juejin.cn/post/6844903928736251918</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> _ = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">partial</span>(<span class=\"params\">fn</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> argaFix = [].<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">arguments</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> argsFree = [].<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = argaFix.<span class=\"property\">length</span>, position = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; len)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(argaFix[i] === _)&#123;</span><br><span class=\"line\">                argaFix[i] = argsFree[position++];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(position &lt; argsFree.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">            argaFix.<span class=\"title function_\">push</span>(argsFree[position++]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, argaFix)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ** Test **</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a, b, c</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a&#x27;</span>,a, <span class=\"string\">&#x27;b&#x27;</span>, b, <span class=\"string\">&#x27;c&#x27;</span>, c);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b + c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> addOne = <span class=\"title function_\">partial</span>(add, _, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">addOne</span>(<span class=\"number\">2</span>, <span class=\"number\">3</span>)); <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"柯里化\"><a href=\"#柯里化\" class=\"headerlink\" title=\"柯里化\"></a>柯里化</h2><p>柯里化可以实现参数复用。本质上是降低通用性，提高适用性<br>在数学和计算机科学中，柯里化是一种将使用多个参数的一个函数转换成一系列使用一个参数的函数的技术。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> _ = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">resort</span>(<span class=\"params\">a, b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> position = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = a.<span class=\"property\">length</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[i] === _ &amp;&amp; position &lt; b.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">            a[i] = b[position++]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(position &lt; b.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">        a.<span class=\"title function_\">push</span>(b[position++])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// console.log(resort([&#x27;a&#x27;, _, &#x27;c&#x27;], [&#x27;b&#x27;, &#x27;d&#x27;]));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">curry</span>(<span class=\"params\">fn, _args = []</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// const args = _args.slice(0).concat([].slice.call(arguments));</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> args = <span class=\"title function_\">resort</span>(_args.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>), [].<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">arguments</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(args.<span class=\"property\">length</span> &lt; fn.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> curry.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, fn, args);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ** Test **</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">a,b,c,d,e</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b + c + d + e;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> curryFn = <span class=\"title function_\">curry</span>(fn);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">curryFn</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">curryFn</span>(<span class=\"string\">&#x27;a&#x27;</span>)(<span class=\"string\">&#x27;b&#x27;</span>)(<span class=\"string\">&#x27;c&#x27;</span>)(<span class=\"string\">&#x27;d&#x27;</span>)(<span class=\"string\">&#x27;e&#x27;</span>))</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">curryFn</span>(<span class=\"string\">&#x27;a&#x27;</span>, _, <span class=\"string\">&#x27;c&#x27;</span>)(_, <span class=\"string\">&#x27;d&#x27;</span>)(<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"防抖\"><a href=\"#防抖\" class=\"headerlink\" title=\"防抖\"></a>防抖</h2><p>回城 n秒内被打断则重新计算时间 应用场景如：resize  搜索框数据请求</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 立即执行版  开始就执行 n秒后可以执行  最后一次触发事件不一定会被执行</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!timer)&#123;</span><br><span class=\"line\">            fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, <span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">            timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;, delay);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 延时执行版  延时执行最后一次  最后一次触发事件肯定会被执行</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">        timer &amp;&amp; <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">        timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args);</span><br><span class=\"line\">            <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">            timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"节流\"><a href=\"#节流\" class=\"headerlink\" title=\"节流\"></a>节流</h2><p>技能冷却  n秒内只执行一次; 应用场景如：input输入信息隔一段时间计算一次</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 立即执行版  时间戳实  最后一次触发事件不一定执行</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">fn, delay</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> prev = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((now - prev) &gt;= delay)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 执行函数</span></span><br><span class=\"line\">            fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, <span class=\"variable language_\">arguments</span>)</span><br><span class=\"line\">            prev = now;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 延时执行版 定时器实现 最后一次触发事件一定执行</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">fn, delay</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!timer)&#123;</span><br><span class=\"line\">            timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">                fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args);</span><br><span class=\"line\">                timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;, delay)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"尾调用\"><a href=\"#尾调用\" class=\"headerlink\" title=\"尾调用\"></a>尾调用</h2><ul>\n<li>在函数的最后一步是return另外一个函数，没有其它操作</li>\n<li>只保留内层函数的调用记录。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用记录只有一项，这将大大节省内存。这就是”尾调用优化”的意义</li>\n<li>尾递归只存在一个调用记录，不易发生”栈溢出”错误</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">g</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 非尾调用</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span> + x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">c</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 非尾调用</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span> + <span class=\"title function_\">g</span>(x);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">c</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 非尾调用</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> r = <span class=\"title function_\">g</span>(x);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> r;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">c</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 尾调用</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">g</span>(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"尾递归-斐波那契数列\"><a href=\"#尾递归-斐波那契数列\" class=\"headerlink\" title=\"尾递归 - 斐波那契数列\"></a>尾递归 - 斐波那契数列</h2><p>尾递归是尾调用的一种特殊情形，使原本 O(n) 的调用栈空间只需要 O(1)<br>斐波那契数列的第n项，非尾递归明显卡顿</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 阶乘 尾递归</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">factorial</span>(<span class=\"params\">n , total = <span class=\"number\">1</span></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> total;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">factorial</span>(n - <span class=\"number\">1</span>, n * total)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 斐波那契数列的第n项  F(n) = F(n-1) + F(n-2) </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 非尾递归</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fibonacci</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">fibonacci</span>(n - <span class=\"number\">1</span>) + <span class=\"title function_\">fibonacci</span>(n - <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 尾递归</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fibonacci</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">fibo</span>(<span class=\"params\">n, n2 = <span class=\"number\">1</span>, n1 = <span class=\"number\">1</span></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &gt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_\">fibo</span>(n - <span class=\"number\">1</span>, n1 + n2, n2);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n == <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n1 + n2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">fibo</span>(n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for 实现</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fibonacci</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> first = <span class=\"number\">1</span>, second = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> number;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        number = first + second</span><br><span class=\"line\">        first = second;</span><br><span class=\"line\">        second = number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// ** Test **</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fibonacci</span>(<span class=\"number\">3</span>));</span><br><span class=\"line\"><span class=\"comment\">// 0 1 2 3 4 5 6 </span></span><br><span class=\"line\"><span class=\"comment\">// 1 1 2 3 5 8 13</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"深拷贝\"><a href=\"#深拷贝\" class=\"headerlink\" title=\"深拷贝\"></a>深拷贝</h2><p>解决循环引用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deepClone</span>(<span class=\"params\">obj, hash = <span class=\"keyword\">new</span> <span class=\"built_in\">WeakMap</span>()</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">&#x27;object&#x27;</span> || obj === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(hash.<span class=\"title function_\">has</span>(obj)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> hash.<span class=\"title function_\">get</span>(obj);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(obj) ? [...obj] : &#123;...obj&#125;;</span><br><span class=\"line\">    hash.<span class=\"title function_\">set</span>(obj, res);</span><br><span class=\"line\">    <span class=\"title class_\">Reflect</span>.<span class=\"title function_\">ownKeys</span>(res).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> item = res[key];</span><br><span class=\"line\">        res[key] = <span class=\"title function_\">deepClone</span>(item, hash);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["js常用函数 | 原理"]},{"title":"通用组件库设计","url":"/coco/2022/07/14/comp-lib/","content":"<p>基于 vue3 typescript sass 实现组件库及其文档系统</p>\n<span id=\"more\"></span>\n\n<p>初始化项目，添加项目名称，选择vue-ts</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npm init vite@latest</span></span><br></pre></td></tr></table></figure>\n\n<p>sass安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npm install -D sass</span></span><br></pre></td></tr></table></figure>\n\n<p>集成eslint</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npm i eslint -D</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npx eslint --init</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"/coco/2022/07/14/comp-lib/vue-ts-uioptions.jpg\" alt=\"npx eslint --init\"></h1><p>测试eslint</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npx eslint src</span></span><br></pre></td></tr></table></figure>\n<p>eslint通过.eslintrc.json配置</p>\n<p>vscode添加 vscode-eslint 插件<br>vscode安装好vscode-eslint插件,会在写代码时自动 lint 检测代码合法性<br>vscode设置setting文件配置如下，开启保存文件时自动修复</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;editor.codeActionsOnSave&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;source.fixAll&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">true</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://zhuanlan.zhihu.com/p/80574300\">https://zhuanlan.zhihu.com/p/80574300</a></p>\n<p>集成prettier</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npm install prettier -D</span></span><br></pre></td></tr></table></figure>\n\n\n<p>集成eslint-config-prettier<br>npm install –save-dev eslint-config-prettier</p>\n<p>添加lint-staged  只对添加到暂存区的文件做校验</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npm install --save-dev lint-staged</span></span><br></pre></td></tr></table></figure>\n\n<p>package.json中添加 lint-staged 配置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;lint-staged&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;*.&#123;vue,js,ts&#125;&quot;</span>: <span class=\"string\">&quot;eslint --fix&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>安装husky </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npm install -D husky <span class=\"comment\"># 安装husky</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npx husky install    <span class=\"comment\"># 初始化husky</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npx husky add .husky/pre-commit <span class=\"string\">&quot;npx lint-staged&quot;</span> <span class=\"comment\"># eslint校验</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npx husky add .husky/commit-msg <span class=\"string\">&quot;node scripts/verifyCommit.js&quot;</span>  <span class=\"comment\"># 新增commit msg钩子</span></span></span><br></pre></td></tr></table></figure>\n\n<p>husky在commit时验证提交信息，不通过则终止代码提交</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npm install -D husky <span class=\"comment\"># 安装husky</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npx husky install    <span class=\"comment\"># 初始化husky</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">新增commit msg钩子</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npx husky add .husky/commit-msg <span class=\"string\">&quot;node scripts/verifyCommit.js&quot;</span></span> </span><br></pre></td></tr></table></figure>\n\n<p>添加eslint校验</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npx husky add .husky/pre-commit <span class=\"string\">&quot;npm run lint&quot;</span></span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"发布到npm\"><a href=\"#发布到npm\" class=\"headerlink\" title=\"发布到npm\"></a>发布到npm</h2>","categories":["组件库"],"tags":["组件库"]},{"title":"常见css布局","url":"/coco/2022/06/30/css-layout/","content":"<p>常见css布局</p>\n<span id=\"more\"></span>\n\n<h2 id=\"三栏布局\"><a href=\"#三栏布局\" class=\"headerlink\" title=\"三栏布局\"></a>三栏布局</h2><p>实现如下图布局：优先渲染中间内容，左200px，右100px，中间自适应</p>\n<p><img src=\"/coco/2022/06/30/css-layout/layout-3.jpg\" alt=\"三栏布局\"></p>\n<h3 id=\"圣杯布局\"><a href=\"#圣杯布局\" class=\"headerlink\" title=\"圣杯布局\"></a>圣杯布局</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>圣杯布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">header</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">152</span>, <span class=\"number\">202</span>, <span class=\"number\">225</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">footer</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">152</span>, <span class=\"number\">202</span>, <span class=\"number\">225</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#content</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">100px</span> <span class=\"number\">0</span> <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#content</span> <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#mid</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#left</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: papayawhip;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: -<span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#right</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">249</span>, <span class=\"number\">236</span>, <span class=\"number\">174</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-right</span>: -<span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span>header<span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mid&quot;</span>&gt;</span></span><br><span class=\"line\">            mid</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span></span><br><span class=\"line\">            left</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span></span><br><span class=\"line\">            right</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span>footer<span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"双飞翼布局\"><a href=\"#双飞翼布局\" class=\"headerlink\" title=\"双飞翼布局\"></a>双飞翼布局</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>双飞翼布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">header</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">152</span>, <span class=\"number\">202</span>, <span class=\"number\">225</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">footer</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">152</span>, <span class=\"number\">202</span>, <span class=\"number\">225</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">clear</span>: both;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#midBox</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#midBox</span> <span class=\"selector-id\">#mid</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">100px</span> <span class=\"number\">0</span> <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#left</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: papayawhip;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#right</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">249</span>, <span class=\"number\">236</span>, <span class=\"number\">174</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span>header<span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;midBox&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mid&quot;</span>&gt;</span></span><br><span class=\"line\">            mid</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span></span><br><span class=\"line\">        left</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span></span><br><span class=\"line\">        right</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span>footer<span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flex-实现\"><a href=\"#flex-实现\" class=\"headerlink\" title=\"flex 实现\"></a>flex 实现</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>圣杯布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">header</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">152</span>, <span class=\"number\">202</span>, <span class=\"number\">225</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">footer</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">152</span>, <span class=\"number\">202</span>, <span class=\"number\">225</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#content</span> <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#content</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#mid</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#left</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: papayawhip;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">flex</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">order</span>: -<span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-id\">#right</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">249</span>, <span class=\"number\">236</span>, <span class=\"number\">174</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">flex</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span>header<span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mid&quot;</span>&gt;</span></span><br><span class=\"line\">            mid</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span></span><br><span class=\"line\">            left</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span></span><br><span class=\"line\">            right</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span>footer<span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"水平垂直居中布局\"><a href=\"#水平垂直居中布局\" class=\"headerlink\" title=\"水平垂直居中布局\"></a>水平垂直居中布局</h2><h3 id=\"定位实现\"><a href=\"#定位实现\" class=\"headerlink\" title=\"定位实现\"></a>定位实现</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">       <span class=\"selector-class\">.parent</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.child</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            -webkit-<span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;child&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flex实现\"><a href=\"#flex实现\" class=\"headerlink\" title=\"flex实现\"></a>flex实现</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">       <span class=\"selector-class\">.parent</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.child</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;child&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三角形\"><a href=\"#三角形\" class=\"headerlink\" title=\"三角形\"></a>三角形</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 三角形 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.angle</span><span class=\"selector-pseudo\">::after</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">30px</span> solid transparent;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-bottom-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;angle&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","categories":["CSS"],"tags":["页面布局"]},{"title":"history","url":"/coco/2022/06/24/mermaid/","content":"<!-- ```mermaid\njourney\ntitle My working day\nsection Go to work\nMake tea: 5: Me\nGo upstairs: 3: Me\nDo work: 1: Me, Cat\nsection Go home\nGo downstairs: 5: Me\nSit down: 5: Me \n```-->\n\n<p><a href=\"https://mermaid-js.github.io/mermaid/#/\">mermaid</a></p>\n"},{"title":"各种前端知识","url":"/coco/2022/06/28/front-end-content/","content":"<p>各种前端知识总结</p>\n<span id=\"more\"></span>\n\n\n\n","categories":["前端知识"]},{"title":"hexo博客搭建","url":"/coco/2022/06/24/hexo-build/","content":"<p>hexo + next 博客搭建，github actions 持续集成。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"依赖版本\"><a href=\"#依赖版本\" class=\"headerlink\" title=\"依赖版本\"></a>依赖版本</h2><ul>\n<li>hexo 6.2.0</li>\n<li>hexo-theme-next 7.8.0</li>\n<li>node 14.x</li>\n<li>git 2.36.1</li>\n<li>hexo-deployer-git 2.0.0</li>\n</ul>\n<h2 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h2><p>参照官网 <a href=\"https://hexo.io/zh-cn/docs/\">hexo</a></p>\n<h2 id=\"theme-next\"><a href=\"#theme-next\" class=\"headerlink\" title=\"theme-next\"></a>theme-next</h2><p>hexo根目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>删除themes主题下的 .git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -rf theme-next/.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"部署到github\"><a href=\"#部署到github\" class=\"headerlink\" title=\"部署到github\"></a>部署到github</h2><blockquote>\n<p>安装 hexo-deployer-git</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">npm install hexo-deployer-git -s</span> </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置项目根目录_config.yml</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">&#x27;XXXX.git&#x27;</span> <span class=\"comment\"># 静态仓库</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">&#x27;main&#x27;</span>   <span class=\"comment\"># 源码仓库的main分支用于部署</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>本地部署 或 github actions自动部署 </p>\n</blockquote>\n<h5 id=\"本地部署\"><a href=\"#本地部署\" class=\"headerlink\" title=\"本地部署\"></a>本地部署</h5><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">hexo generate &amp;&amp; hexo deploy</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"github-actions-部署-本地push到blog-source时，github-pages自动更新\"><a href=\"#github-actions-部署-本地push到blog-source时，github-pages自动更新\" class=\"headerlink\" title=\"github actions 部署 (本地push到blog-source时，github pages自动更新)\"></a>github actions 部署 (本地push到blog-source时，github pages自动更新)</h5><ul>\n<li>新建两个仓库，一个为 blog-source (源码仓库 public); 一个为blog(静态仓库 private);</li>\n<li>生成公钥和私钥，在path路径下，公钥私钥分别在文件 id_rsa.pub 和 id_rsa<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">ssh-keygen -t rsa -f <span class=\"string\">&quot;path/id_rsa&quot;</span></span></span><br></pre></td></tr></table></figure></li>\n<li>进入 github 个人账户 <ul>\n<li>settings → SSH and GPG keys → New SSH key</li>\n<li>Title设置为 <code>ACTION_DEPLOY_KEY</code>，key为公钥</li>\n</ul>\n</li>\n<li>进入blog 仓库 <ul>\n<li>Settings → pages → 开启GitHub Pages</li>\n</ul>\n</li>\n<li>进入blog-source 仓库 <ul>\n<li>Settings → Secrets → Actions → New secret</li>\n<li>Name为 <code>ACTION_DEPLOY_KEY</code>，value为私钥</li>\n<li>Actions → new workflow → set up a workflow yourself</li>\n</ul>\n</li>\n</ul>\n<p>workflow  mian.yml 文件配置如下</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">Blog</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span> <span class=\"comment\">#main分支有新的push时执行</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span> </span><br><span class=\"line\">    <span class=\"attr\">branches:</span>    </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;main&#x27;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span> <span class=\"comment\"># 一项叫做build的任务</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span> <span class=\"comment\"># 在最新版的Ubuntu系统下运行</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v3</span>  <span class=\"comment\"># 将仓库内main分支的内容下载到工作目录 配置脚本来自  https://github.com/actions/checkout</span></span><br><span class=\"line\">      <span class=\"attr\">with:</span></span><br><span class=\"line\">        <span class=\"attr\">ref:</span> <span class=\"string\">main</span></span><br><span class=\"line\">          </span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Use</span> <span class=\"string\">Node.js</span> <span class=\"number\">14.</span><span class=\"string\">x</span> <span class=\"comment\"># 配置Node环境</span></span><br><span class=\"line\">      <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span> <span class=\"comment\"># 配置脚本来自 https://github.com/actions/setup-node</span></span><br><span class=\"line\">      <span class=\"attr\">with:</span></span><br><span class=\"line\">        <span class=\"attr\">node-version:</span> <span class=\"string\">&quot;14.x&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Hexo</span> <span class=\"string\">env</span></span><br><span class=\"line\">      <span class=\"attr\">env:</span></span><br><span class=\"line\">        <span class=\"attr\">ACTION_DEPLOY_KEY:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.ACTION_DEPLOY_KEY</span> <span class=\"string\">&#125;&#125;</span> <span class=\"comment\"># ACTION_DEPLOY_KEY 私有仓库私钥的key</span></span><br><span class=\"line\">      <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">        # set up private key for deploy</span></span><br><span class=\"line\"><span class=\"string\">        mkdir -p ~/.ssh/</span></span><br><span class=\"line\"><span class=\"string\">        echo &quot;$ACTION_DEPLOY_KEY&quot; | tr -d &#x27;\\r&#x27; &gt; ~/.ssh/id_rsa # 配置秘钥</span></span><br><span class=\"line\"><span class=\"string\">        chmod 600 ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"string\">        ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class=\"line\"><span class=\"string\">        # ssh-keyscan your-server-ip.com &gt;&gt; ~/.ssh/known_hosts # 如果需要 sftp，则还需要注释掉一行</span></span><br><span class=\"line\"><span class=\"string\">        # set git infomation</span></span><br><span class=\"line\"><span class=\"string\">        git config --global init.defaultBranch main</span></span><br><span class=\"line\"><span class=\"string\">        git config --global user.name &#x27;&#x27; # 自己的名字</span></span><br><span class=\"line\"><span class=\"string\">        git config --global user.email &#x27;&#x27; # 自己的邮箱</span></span><br><span class=\"line\"><span class=\"string\">        # install dependencies</span></span><br><span class=\"line\"><span class=\"string\">        npm i -g hexo-cli # 安装hexo</span></span><br><span class=\"line\"><span class=\"string\">        npm i</span></span><br><span class=\"line\"><span class=\"string\"></span>  </span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span></span><br><span class=\"line\">      <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">        # publish</span></span><br><span class=\"line\"><span class=\"string\">        hexo generate &amp;&amp; hexo deploy # 执行部署程序</span></span><br></pre></td></tr></table></figure>","categories":["hexo"],"tags":["hexo","github actions"]},{"title":"demo-show","url":"/coco/2023/02/16/demo-show/","content":"<p>项目展示</p>\n<span id=\"more\"></span>\n<ul>\n<li><a href=\"https://cdn-wxcw.test.17zuoye.net/courseware/template/v3/test/speakingTree/index.html?debug=true&debug_record=true#user_type_debug=1&user_type=1&question_index=0\">豌豆树</a></li>\n<li><a href=\"http://cdn-wxcw.test.17zuoye.net/courseware/template/v3/test/cashRegister/index.html?debug=true#user_type_debug=1&user_type=1&question_index=0\">收银机</a></li>\n<li><a href=\"http://cdn-wxcw.test.17zuoye.net/courseware/template/v3/test/letter/index.html?debug=true#user_type_debug=1&user_type=1&question_index=0\">字母描红</a></li>\n<li><a href=\"http://cdn-wxcw.test.17zuoye.net/courseware/template/v3/test/caveEscape/index.html?debug=true#user_type_debug=1&user_type=1&question_index=0\">洞穴逃生</a></li>\n</ul>\n","categories":["项目展示"]}]